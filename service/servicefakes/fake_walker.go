// Code generated by counterfeiter. DO NOT EDIT.
package servicefakes

import (
	"sync"

	"github.com/baotingfang/go-pivnet-client/service"
)

type FakeWalker struct {
	GetAllFilesStub        func(string) []string
	getAllFilesMutex       sync.RWMutex
	getAllFilesArgsForCall []struct {
		arg1 string
	}
	getAllFilesReturns struct {
		result1 []string
	}
	getAllFilesReturnsOnCall map[int]struct {
		result1 []string
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeWalker) GetAllFiles(arg1 string) []string {
	fake.getAllFilesMutex.Lock()
	ret, specificReturn := fake.getAllFilesReturnsOnCall[len(fake.getAllFilesArgsForCall)]
	fake.getAllFilesArgsForCall = append(fake.getAllFilesArgsForCall, struct {
		arg1 string
	}{arg1})
	fake.recordInvocation("GetAllFiles", []interface{}{arg1})
	fake.getAllFilesMutex.Unlock()
	if fake.GetAllFilesStub != nil {
		return fake.GetAllFilesStub(arg1)
	}
	if specificReturn {
		return ret.result1
	}
	fakeReturns := fake.getAllFilesReturns
	return fakeReturns.result1
}

func (fake *FakeWalker) GetAllFilesCallCount() int {
	fake.getAllFilesMutex.RLock()
	defer fake.getAllFilesMutex.RUnlock()
	return len(fake.getAllFilesArgsForCall)
}

func (fake *FakeWalker) GetAllFilesCalls(stub func(string) []string) {
	fake.getAllFilesMutex.Lock()
	defer fake.getAllFilesMutex.Unlock()
	fake.GetAllFilesStub = stub
}

func (fake *FakeWalker) GetAllFilesArgsForCall(i int) string {
	fake.getAllFilesMutex.RLock()
	defer fake.getAllFilesMutex.RUnlock()
	argsForCall := fake.getAllFilesArgsForCall[i]
	return argsForCall.arg1
}

func (fake *FakeWalker) GetAllFilesReturns(result1 []string) {
	fake.getAllFilesMutex.Lock()
	defer fake.getAllFilesMutex.Unlock()
	fake.GetAllFilesStub = nil
	fake.getAllFilesReturns = struct {
		result1 []string
	}{result1}
}

func (fake *FakeWalker) GetAllFilesReturnsOnCall(i int, result1 []string) {
	fake.getAllFilesMutex.Lock()
	defer fake.getAllFilesMutex.Unlock()
	fake.GetAllFilesStub = nil
	if fake.getAllFilesReturnsOnCall == nil {
		fake.getAllFilesReturnsOnCall = make(map[int]struct {
			result1 []string
		})
	}
	fake.getAllFilesReturnsOnCall[i] = struct {
		result1 []string
	}{result1}
}

func (fake *FakeWalker) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.getAllFilesMutex.RLock()
	defer fake.getAllFilesMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeWalker) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ service.Walker = new(FakeWalker)
